# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main
jobs:
  deploy_firebase:
    name: Deploy Next.js App to Firebase
    runs-on: ubuntu-latest
    env:
      FIREBASE_CLI_EXPERIMENTS: webframeworks
      NEXT_PUBLIC_DOMAIN: ${{ secrets.NEXT_PUBLIC_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      NEXT_PUBLIC_GOOGLE_APPS_SCRIPT_DEPLOYMENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_APPS_SCRIPT_DEPLOYMENT_ID }}
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Setup Firebase Credentials
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SWALIGA_FOUNDATION }}' > ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Deploy to Firebase Hosting
        run: firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}

  deploy_apps_script:
    name: Deploy to Apps Script
    runs-on: ubuntu-latest
    env:
      FIREBASE_CLI_EXPERIMENTS: webframeworks
      NEXT_PUBLIC_DOMAIN: ${{ secrets.NEXT_PUBLIC_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      NEXT_PUBLIC_GOOGLE_APPS_SCRIPT_DEPLOYMENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_APPS_SCRIPT_DEPLOYMENT_ID }}
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install CLASP
        run: npm install -g @google/clasp@2.5.0

      - name: Setup GCP Credentials
        run: |
          cd apps-script
          echo '${{ secrets.GCP_SERVICE_ACCOUNT }}' > ${{ secrets.CLASP_APPLICATION_CREDENTIALS }}
          echo '${{ secrets.CLASPRC_JSON }}' > .clasprc.json

      - name: Deploy to CLASP
        run: |
          cd apps-script
          npm ci
          ls -al
          clasp list
          npm run deploy
          VERSION=$(clasp create-version 'Automated deployment $GITHUB_SHA' | grep -o '[0-9]\+' | tail -1)
          ACCESS_TOKEN=$(gcloud auth application-default print-access-token)
          curl -X DELETE -H "Authorization: Bearer $ACCESS_TOKEN" https://script.googleapis.com/v1/projects/14ukd8FP51BIhk9bBjaMJUMKU0rMoo22MPiLbTrskUUOLgEt3yPeF8anF/versions/$(($VERSION - 1))
          clasp create-deployment --versionNumber $VERSION --description 'Automated deployment $GITHUB_SHA' --deploymentId ${{ secrets.NEXT_PUBLIC_GOOGLE_APPS_SCRIPT_DEPLOYMENT_ID }}
