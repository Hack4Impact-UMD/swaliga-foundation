.container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    padding: 0;
    
}

.background {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow: hidden;
}

.stage {
    position: absolute;
    top: 0;
    left: 0;

    display: block;
    z-index: 1;
}

.createAccountContainer {
    position: absolute;
    width: 60%;
    max-width: 800px;
    padding: 20px;
    border-radius: 8px;
    display: flex;
    color: #fff;
    flex-direction: column;
    box-sizing: border-box;
    z-index: 2;
}

.createAccountTitle {
    margin-left: 0; /* Aligns title to the left */
    font-size: 24px; /* Example font size */
}

.accountForm {
    position: absolute;
    /*border: 8px solid white;*/
    top: 50%;
    left: 53%;
    transform: translate(-50%, -50%);
    z-index: 2;
    width: 87%; /* Adjusted width */
    height: 85%; /* Adjust height as necessary, or use 'auto' */
    overflow-y: auto;
    min-width: 300px; /* Adjust min-width as necessary */
    max-width: 1600px;
    padding: 10px 12px; /* This also affects the height indirectly */
    background-color: #0F0F0D;
    color: #fff;
    font-family: Poppins;
    box-shadow: 5px 5px 15px rgba(0,0,0,0.5);
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    gap: 15px;
}

.formGroupRow {
    display: flex;
    justify-content: space-between;
    align-items: center; /* Center-align the items vertically */
    gap: 15px;
    width: 100%;
}

.formGroup {
    flex-grow: 1; /* Adjust this if necessary, it's for vertical stacking of label and inputs */
    
}

.inputRow {
    display: flex; /* Ensures horizontal layout */
    justify-content: start; /* Aligns items to the start, change to 'space-between' if you want them spread out */
    gap: 10px; /* Adjust the gap between input fields */
    width: 100%;
}

.contactContainer {
    flex-direction: column; /* Stack the elements vertically */
}

.contactContainer:not(:first-of-type) {
    margin-top: 40px; /* Add some space between each contact group except the first one */
}

.emergencyAddButton {
    float: left;
    background-color: #D9D9D9;
    color: black;
    padding: 5px 15px;
    font-size: 10px;
    border-radius: 5px;
    cursor: pointer;
    border: none;
    outline: none;
}

.emergencyRemoveButton {
    float: right;
    background-color: #D9D9D9;
    color: black;
    padding: 5px 15px;
    font-size: 10px;
    border-radius: 5px;
    cursor: pointer;
    border: none;
    outline: none;
}

.emergencyAddButton:hover {
    opacity: 0.8;
}

.emergencyRemoveButton:hover {
    opacity: 0.8;
}

.inputIconGroup {
    position: relative;
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    flex-grow: 1;
}

.inputIconGroup input {
    width: calc(100% - 50px);
    padding: 10px 40px; /* Adjust padding to not overlap icons */
    display: flex;
    background-color: #D9D9D9;
    color: black; /* Input text color */
    border: none;
    border-radius: 10px;
    outline: none;
    
}

.inputIconGroup i {
    position: absolute;
    left: 10px;
    color: black; /* Icon color */
}

.passwordError {
    color: red; /* Or any color you want */
}

.inputError input {
    border: 1px solid red;
    background-color: #FFCCCC;
}

.inputError i {
    color: red;
}


.fa-eye, .fa-eye-slash {
    right: 10px;
    cursor: pointer;
}

.submitButton {
    margin-top: auto;
    background-color: #4CAF50; /* Green background for submit button */
    color: white;
    padding: 10px 15px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.submitButton:hover {
    opacity: 0.8;
}

.labelWithCheckbox {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.requiredAsterisk {
    color: red;
}
